
// creating trigger on lead object
trigger leadtriggers on Lead (before insert, before update) {
    
    if(Trigger.isbefore && (Trigger.isinsert || Trigger.isupdate))
    {
        leadhelper.beforeandafter(Trigger.New);
    }

}
----------------------------------------------
public class leadhelper {
    public static void beforeandafter(list<lead> ld){
        for(Lead newld:ld)
        {
            Switch on newld.Industry{
                When 'Banking'{
                    newld.AnnualRevenue=7890;
                }
                when 'Finance'{
                    newld.AnnualRevenue=097987; 
                }
                when 'Insurance'{
                    newld.AnnualRevenue=867986;
                }
                when 'Education'{
                    newld.AnnualRevenue=875;
                }
            }
        }
    }

}
=================================================================================================
rigger Triggeronleadrecords on Lead (before insert, before update) {
    if(Trigger.isBefore && (Trigger.isinsert || Trigger.isupdate))
    {
        for(Lead newld:Trigger.New)
        {
            if(newld.Street==null)
            {
                newld.Street.AddError('Street is required');
            }
             if(newld.city==null)
            {
                newld.City.AddError('The City is required field');
            }
             if(newld.State==null)
            {
                newld.State.AddError('The State is required field');
            }
             if(newld.Country==null)
            {
                newld.Country.AddError('The Country is required field');
            }
             if(newld.PostalCode==null)
            {
                newld.PostalCode.AddError('The postal code is required field');
            }
        }
    }

}

